[
  {
    "project_id": "xxulq19bn3xs2evpo0hc4xqq",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "Nuxt is a community project - and so we love contributions of all kinds! \u2764\uFE0F\r\n\r\nThere is a range of different ways you might be able to contribute to the Nuxt ecosystem.\r\n\r\n## Ecosystem\r\n\r\nThe Nuxt ecosystem includes many different projects and organizations:\r\n\r\n* [nuxt/](https://github.com/nuxt) - core repositories for the Nuxt framework itself. [**nuxt/nuxt**](https://github.com/nuxt/nuxt) contains the Nuxt framework (both versions 2 and 3).\r\n* [nuxt-modules/](https://github.com/nuxt-modules) - community-contributed and maintained modules and libraries. There is a [process to migrate a module](/docs/guide/going-further/modules/#joining-nuxt-modules-and-nuxtjs) to `nuxt-modules`. While these modules have individual maintainers, they are not dependent on a single person.\r\n* [unjs/](https://github.com/unjs) - many of these libraries are used throughout the Nuxt ecosystem. They are designed to be universal libraries that are framework- and environment-agnostic. We welcome contributions and usage by other frameworks and projects.\r\n\r\n## How To Contribute\r\n\r\n### Triage Issues and Help Out in Discussions\r\n\r\nCheck out the issues and discussions for the project you want to help. For example, here are [the issues board](https://github.com/nuxt/nuxt/issues) and [discussions](https://github.com/nuxt/nuxt/discussions) for Nuxt 3. Helping other users, sharing workarounds, creating reproductions, or even poking into a bug a little bit and sharing your findings makes a huge difference.\r\n\r\n### Creating an Issue\r\n\r\nThank you for taking the time to create an issue! \u2764\uFE0F\r\n\r\n* **Reporting bugs**: Check out [our guide](/docs/community/reporting-bugs) for some things to do before opening an issue.\r\n\r\n* **Feature requests**: Check that there is not an existing issue or discussion covering the scope of the feature you have in mind. If the feature is to another part of the Nuxt ecosystem (such as a module), please consider raising a feature request there first. If the feature you have in mind is general or the API is not entirely clear, consider opening a discussion in the **Ideas** section to discuss with the community first.\r\n\r\nWe'll do our best to follow our [internal issue decision making flowchart](https://mermaid.live/view#pako:eNqFlE1v2zAMhv8K4UuToslhx2Bo0TZt12Edhm7YMCAXWqJtorLk6qOpkfS_j7KdfpyWQ-BQr8mHL6nsCuU0FauiMm6rGvQRfq03FuRzvvvTYIQHthpcBT_ugQNwPHuZjheLxf4i1VDx8x4udrf5EBCOQvSsYg4ffS79KS9pmX9QALTgyid2KYB7Ih-4bmKWbDk2YB0E1gRUVaRi-FDmmjAmT3u4nB3DmoNKIUA1BsGSohA49jnVMQhHbDh_EZQUImyxh-gAtfaiG-KWSJ-N8nt6YtpCdgEeE5rXPOdav5YwWJIJU7zrvNADV9C7JBIyIC07Wxupkx3LFQ5vCkguRno5f9fP2qnUko0Y2dk9rGdvHAa9IIhVGlCp5FFNPN-ce4DKeXBd53xMliOLp9IZtyORQVsnrGm-WJzejtUu5fFqdr5FGQ3bLslYvGthjZbJTLpReZG5_lLYw7XQ_CbPVT92ws9gnEJj-v84dk-PiaXnmF1XGAaPsOsMKywNvYmG80ZohV8k4wDR9_N3KN_dHm5mh1lnkM5FsYzRfNiTvJoT5gnQsl6uxjqXLhkNQ9syHJ0UZZ8ERUIlNShr6N8gZDEliR-ow7QZa0fhY4LoHLRo-8N7ZxPwjRj5ZZYXpvOSNs9v3Jjs8NXB4ets92xan3zydXZHvj64lKMayh4-gZC1bjASW2ipLeWuzIuToiXfImu5rbucclMIc0ubYiWPGv3DptjYF9Fhiu5nb1Wxij7RSZE6jZHWjLXHtlhVaIJESXN0_m68_sO_wMs_oO9gyg) when responding to issues.\r\n\r\n### Send a Pull Request\r\n\r\nWe always welcome pull requests! \u2764\uFE0F\r\n\r\n#### Before You Start\r\n\r\nBefore you fix a bug, we recommend that you check whether **there's an issue that describes it**, as it's possible it's a documentation issue or that there is some context that would be helpful to know.\r\n\r\nIf you're working on a feature, then we ask that you **open a feature request issue first** to discuss with the maintainers whether the feature is desired - and the design of those features. This helps save time for both the maintainers and the contributors and means that features can be shipped faster. The issue **should be confirmed** by a framework team member before building out a feature in a pull request.\r\n\r\nFor typo fixes, it's recommended to batch multiple typo fixes into one pull request to maintain a cleaner commit history.\r\n\r\nFor bigger changes to Nuxt itself, we recommend that you first [create a Nuxt module](#create-a-module) and implement the feature there. This allows for quick proof-of-concept. You can then [create an RFC](#make-an-rfc) in the form of a discussion. As users adopt it and you gather feedback, it can then be refined and either added to Nuxt core or continue as a standalone module.\r\n\r\n#### Commit Conventions\r\n\r\nWe use [Conventional Commits](https://www.conventionalcommits.org) for commit messages, which [allows a changelog to be auto-generated](https://github.com/unjs/changelogen) based on the commits. Please read the guide through if you aren't familiar with it already.\r\n\r\nNote that `fix:` and `feat:` are for **actual code changes** (that might affect logic). For typo or document changes, use `docs:` or `chore:` instead:\r\n\r\n* ~~`fix: typo`~~ -> `docs: fix typo`\r\n\r\nIf you are working in a project with a monorepo, like `nuxt/nuxt`, ensure that you specify the main scope of your commit in brackets. For example: `feat(nuxi): add 'do-magic' command`.\r\n\r\n#### Making the Pull Request\r\n\r\nIf you don't know how to send a pull request, we recommend reading [the guide](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request).\r\n\r\nWhen sending a pull request, make sure your PR's title also follows the [Commit Convention](#commit-conventions).\r\n\r\nIf your PR fixes or resolves existing issues, please make sure you mention them in the PR description.\r\n\r\nIt's ok to have multiple commits in a single PR; you don't need to rebase or force push for your changes as we will use `Squash and Merge` to squash the commits into one commit when merging.\r\n\r\nWe do not add any commit hooks to allow for quick commits. But before you make a pull request, you should ensure that any lint/test scripts are passing.\r\n\r\nIn general, please also make sure that there are no _unrelated_ changes in a PR. For example, if your editor has made any changes to whitespace or formatting elsewhere in a file that you edited, please revert these so it is more obvious what your PR changes. And please avoid including multiple unrelated features or fixes in a single PR. If it is possible to separate them, it is better to have multiple PRs to review and merge separately. In general, a PR should do _one thing only_.\r\n\r\n#### Once You've Made a Pull Request\r\n\r\nOnce you've made a pull request, we'll do our best to review it promptly.\r\n\r\nIf we assign it to a maintainer, then that means that person will take special care to review it and implement any changes that may be required.\r\n\r\nIf we request changes on a PR, please ignore the red text! It doesn't mean we think it's a bad PR - it's just a way of easily telling the status of a list of pull requests at a glance.\r\n\r\nIf we mark a PR as 'pending', that means we likely have another task to do in reviewing the PR - it's an internal note-to-self, and not necessarily a reflection on whether the PR is a good idea or not. We will do our best to explain via a comment the reason for the pending status.\r\n\r\nWe'll do our best to follow [our PR decision making flowchart](https://mermaid.live/view#pako:eNp9VE1v2kAQ_SsjXzBSEqlALlaUisSh0ACK2l4qcVm8Y9hi7672Iwly-O-ZtYPt5FAOCHbee_PmzdpVlCmOURLlhXrJ9sw4-JNuJNBnWs1UQafIQVjrERyWumAOv58-AJeXt29_0b7BXbWwwL0uRPa1vlZvcB_fF8oiMMmB2QM4BXkt3UoON7Lh3LWaDz2SVkK6QGt7DHvw0CKt5sxCKaQoWQEGtVHcZ04oGdw04LTVngW_LHOeFcURGGz97mw6PSv-iJdsi0UCA4nI7SfNwc3W3JZit3eQ1SZFDlKB15yswQ2MgbOjbYeatY3n8bcr-IWlekYYaJRcyB04I9gOB1CEfkF5dAVTzmFAtnqn4-bUYAiMMmHZgWhNPRhgus5mW2BATxq0NkIZ4Y4NbNjzE2ZchBzcHmGLe_ZMSKCcyRXyLrVFa_5n_PBK2xKy3kk9eOjULUdltk6C8kI-7NFDr8f4EVGDoqlp-wa4sJm3ltIMIuZ_mTQXJyTSkQZtunPqsKxShV9GKdkBYe1fHXjpbcjlvONlO9Kqx_M7YHmOmav_luxfE5zKwVs09hM5DLSupgYDlr5flDkwo7ykixKG-xDsUly1LZ-uY32dgDc7lG7YqwbNp0msJwmIUivjWFtfd-xRrEcJ7Omydz37qFplHOtxEp4GskI2qB5dRCWakglOz3oV8JuITJa4iRL6yZk5bKKNPBGOead-H2UWJc54vIiaW53SPgwrz4fIhVNm1bw76lfI6R2_MW21) when responding and reviewing to pull requests.\r\n\r\n### Create a Module\r\n\r\nIf you've built something with Nuxt that's cool, why not [extract it into a module](/docs/guide/going-further/modules), so it can be shared with others? We have [many excellent modules already](/modules), but there's always room for more.\r\n\r\nIf you need help while building it, feel free to [check in with us](/docs/community/getting-help).\r\n\r\n### Make an RFC\r\n\r\nWe highly recommend [creating a module](#create-a-module) first to test out big new features and gain community adoption.\r\n\r\nIf you have done this already, or it's not appropriate to create a new module, then please start by creating a new discussion. Make sure it explains your thinking as clearly as possible. Include code examples or function signatures for new APIs. Reference existing issues or pain points with examples.\r\n\r\nIf we think this should be an RFC, we'll change the category to RFC and broadcast it more widely for feedback.\r\n\r\nAn RFC will then move through the following stages:\r\n\r\n* `rfc: active` - currently open for comment\r\n* `rfc: approved` - approved by the Nuxt team\r\n* `rfc: ready to implement` - an issue has been created and assigned to implement\r\n* `rfc: shipped` - implemented\r\n* `rfc: archived` - not approved, but archived for future reference\r\n\r\n### Conventions Across Ecosystem\r\n\r\nThe following conventions are _required_ within the `nuxt/` organization and recommended for other maintainers in the ecosystem.",
    "call_to_action_url": "https://github.com/nuxt/nuxt/contribute"
  },
  {
    "project_id": "gbttcmw6kysv50b3c1bdtv8w",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "## Contribution Guide\r\n\r\n### Bug Reports\r\n\r\nTo encourage active collaboration, Laravel strongly encourages pull requests, not just bug reports. Pull requests will only be reviewed when marked as \"ready for review\" (not in the \"draft\" state) and all tests for new features are passing. Lingering, non-active pull requests left in the \"draft\" state will be closed after a few days.\r\n\r\nHowever, if you file a bug report, your issue should contain a title and a clear description of the issue. You should also include as much relevant information as possible and a code sample that demonstrates the issue. The goal of a bug report is to make it easy for yourself - and others - to replicate the bug and develop a fix.\r\n\r\nRemember, bug reports are created in the hope that others with the same problem will be able to collaborate with you on solving it. Do not expect that the bug report will automatically see any activity or that others will jump to fix it. Creating a bug report serves to help yourself and others start on the path of fixing the problem. If you want to chip in, you can help out by fixing [any bugs listed in our issue trackers](https://github.com/issues?q=is%3Aopen+is%3Aissue+label%3Abug+user%3Alaravel). You must be authenticated with GitHub to view all of Laravel's issues.\r\n\r\nIf you notice improper DocBlock, PHPStan, or IDE warnings while using Laravel, do not create a GitHub issue. Instead, please submit a pull request to fix the problem.\r\n\r\nThe Laravel source code is managed on GitHub, and there are repositories for each of the Laravel projects:\r\n\r\n- [Laravel Application](https://github.com/laravel/laravel)\r\n- [Laravel Art](https://github.com/laravel/art)\r\n- [Laravel Breeze](https://github.com/laravel/breeze)\r\n- [Laravel Documentation](https://github.com/laravel/docs)\r\n- [Laravel Dusk](https://github.com/laravel/dusk)\r\n- [Laravel Cashier Stripe](https://github.com/laravel/cashier)\r\n- [Laravel Cashier Paddle](https://github.com/laravel/cashier-paddle)\r\n- [Laravel Echo](https://github.com/laravel/echo)\r\n- [Laravel Envoy](https://github.com/laravel/envoy)\r\n- [Laravel Folio](https://github.com/laravel/folio)\r\n- [Laravel Framework](https://github.com/laravel/framework)\r\n- [Laravel Homestead](https://github.com/laravel/homestead) ([Build Scripts](https://github.com/laravel/settler))\r\n- [Laravel Horizon](https://github.com/laravel/horizon)\r\n- [Laravel Jetstream](https://github.com/laravel/jetstream)\r\n- [Laravel Passport](https://github.com/laravel/passport)\r\n- [Laravel Pennant](https://github.com/laravel/pennant)\r\n- [Laravel Pint](https://github.com/laravel/pint)\r\n- [Laravel Prompts](https://github.com/laravel/prompts)\r\n- [Laravel Reverb](https://github.com/laravel/reverb)\r\n- [Laravel Sail](https://github.com/laravel/sail)\r\n- [Laravel Sanctum](https://github.com/laravel/sanctum)\r\n- [Laravel Scout](https://github.com/laravel/scout)\r\n- [Laravel Socialite](https://github.com/laravel/socialite)\r\n- [Laravel Telescope](https://github.com/laravel/telescope)\r\n- [Laravel Website](https://github.com/laravel/laravel.com)\r\n\r\n### Core Development Discussion\r\n\r\nYou may propose new features or improvements of existing Laravel behavior in the Laravel framework repository's [GitHub discussion board](https://github.com/laravel/framework/discussions). If you propose a new feature, please be willing to implement at least some of the code that would be needed to complete the feature.\r\n\r\nInformal discussion regarding bugs, new features, and implementation of existing features takes place in the `#internals` channel of the [Laravel Discord server](https://discord.gg/laravel). Taylor Otwell, the maintainer of Laravel, is typically present in the channel on weekdays from 8am-5pm (UTC-06:00 or America/Chicago), and sporadically present in the channel at other times.\r\n\r\n### Which Branch?\r\n\r\nAll bug fixes should be sent to the latest version that supports bug fixes (currently `11.x`). Bug fixes should never be sent to the `master` branch unless they fix features that exist only in the upcoming release.\r\n\r\nMinor features that are fully backward compatible with the current release may be sent to the latest stable branch (currently `11.x`).\r\n\r\nMajor new features or features with breaking changes should always be sent to the `master` branch, which contains the upcoming release.\r\n\r\n### Compiled Assets\r\n\r\nIf you are submitting a change that will affect a compiled file, such as most of the files in `resources/css` or `resources/js` of the `laravel/laravel` repository, do not commit the compiled files. Due to their large size, they cannot realistically be reviewed by a maintainer. This could be exploited as a way to inject malicious code into Laravel. In order to defensively prevent this, all compiled files will be generated and committed by Laravel maintainers.\r\n\r\n## Code of Conduct\r\n\r\nThe Laravel code of conduct is derived from the Ruby code of conduct. Any violations of the code of conduct may be reported to Taylor Otwell ([taylor@laravel.com](mailto:taylor@laravel.com)):\r\n\r\n- Participants will be tolerant of opposing views.\r\n- Participants must ensure that their language and actions are free of personal attacks and disparaging personal remarks.\r\n- When interpreting the words and actions of others, participants should always assume good intentions.\r\n- Behavior that can be reasonably considered harassment will not be tolerated.",
    "call_to_action_url": "https://github.com/issues?q=is%3Aopen+is%3Aissue+label%3Abug+user%3Alaravel"
  },
  {
    "project_id": "sx01xjgjastuynhyt6unca0p",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "Django is a community that lives on its volunteers. As it keeps growing, we always need more people to help others. You can contribute in many ways, either on the framework itself or in the wider ecosystem.\r\n\r\n## Communication Channels\r\n\r\nWe\u2019re passionate about helping Django users make the jump to contributing members of the community. Communication is key - working on Django is being part of a conversation. Join it, to become familiar with what we\u2019re doing and how we talk about it. You\u2019ll be able to form relationships with more experienced contributors who are there to help guide you towards success.\r\n\r\n### Join the Django community\r\n\r\nThere are several ways you can help the Django community and others to maintain a great ecosystem to work in:\r\n\r\n- Join the [Django forum](https://forum.djangoproject.com/). This forum is a place for discussing the Django framework and applications and projects that use it. This is also a good place to ask and answer any questions related to installing, using, or contributing to Django.\r\n- Join the [django-users](https://docs.djangoproject.com/en/dev/internals/mailing-lists/#django-users-mailing-list) mailing list and answer questions. This mailing list has a huge audience, and we really want to maintain a friendly and helpful atmosphere. If you\u2019re new to the Django community, you should read the [posting guidelines](https://code.djangoproject.com/wiki/UsingTheMailingList).\r\n- Join the [Django Discord server](https://discord.gg/xcRH6mN4fa) to discuss and answer questions. By explaining Django to other users, you\u2019re going to learn a lot about the framework yourself.\r\n- Blog about Django. We syndicate all the Django blogs we know about on the [community page](https://www.djangoproject.com/community/); if you\u2019d like to see your blog on that page you can [register it here](https://www.djangoproject.com/community/add/blogs/).\r\n- Contribute to open-source Django projects, write some documentation, or release your own code as an open-source pluggable application. The ecosystem of pluggable applications is a big strength of Django, help us build it!\r\n\r\n## Getting Started\r\n\r\nDjango encourages and welcomes new contributors, and makes an effort to help them become experienced, confident contributors to Open Source Software (OSS). Our documentation contains guidance for first-time contributors, including:\r\n\r\n- [An overview of the contributing process and what's involved.](https://docs.djangoproject.com/en/dev/internals/contributing/new-contributors/)\r\n\r\n## Work on the Django framework\r\n\r\nIf you enjoy working with Django, wait until you start working on it. Really, anyone can do something to improve Django, which will improve the experience of lots of people!\r\n\r\nThe work on Django itself falls into three major areas:\r\n\r\n### Contributing code\r\n\r\nFix a bug, or add a new feature. You can make a pull request and see your code in the next version of Django.\r\n\r\n- [Contribute code](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/)\r\n  - [Tutorials](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/#tutorials)\r\n  - [How-to guides](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/#how-to-guides)\r\n  - [Related topics](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/#related-topics)\r\n\r\n### Contributing documentations\r\n\r\nDjango\u2019s documentation is one of its key strengths. It\u2019s informative and thorough. You can help to improve the documentation and keep it relevant as the framework evolves.\r\n\r\n- [Writing documentation](https://docs.djangoproject.com/en/dev/internals/contributing/writing-documentation/)\r\n\r\n### Localizing Django\r\n\r\nDjango is translated into over 100 languages - There\u2019s even some translation for Klingon?! The i18n team is always looking for translators to help maintain and increase language reach.\r\n\r\n- [Localizing Django](https://docs.djangoproject.com/en/dev/internals/contributing/localizing/)\r\n\r\n### Other ways of contributing\r\n\r\nExplore additional avenues of contributing to Django beyond coding. Django\u2019s ticket tracker is the central hub for managing issues, improvements, and contributions to Django. It\u2019s a valuable resource where you can report bugs you encounter or assist in triaging existing tickets to ensure a smooth development workflow. Explore the ways you can make a difference below, and join us in making Django better for everyone.",
    "call_to_action_url": "https://code.djangoproject.com"
  },
  {
    "project_id": "mor2qegbhndorcko7gumc8x4",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "Thank you for taking an interest in contributing to Fastify. We are excited to\r\nreceive your support and knowledge. This guide is our attempt to help you help\r\nus.\r\n\r\n## Types Of Contributions We're Looking For\r\n\r\nIn short, we welcome any type of contribution you are willing to provide. No\r\ncontribution is too small. We gladly accept contributions such as:\r\n\r\n* Documentation improvements: from small typo corrections to major document\r\n  reworks\r\n* Helping others by answering questions in pull requests and\r\n  [discussions](https://github.com/fastify/fastify/discussions)\r\n* Fixing [known\r\n  bugs](https://github.com/fastify/fastify/issues?q=is%3Aissue+is%3Aopen+label%3Abug)\r\n* Reporting previously unknown bugs by opening an issue with a minimal\r\n  reproduction\r\n\r\n## Ground Rules & Expectations\r\n\r\nBefore we get started, here are a few things we expect from you (and that you\r\nshould expect from others):\r\n\r\n* Be respectful and thoughtful in your conversations around this project. This\r\n  project is maintained by a diverse set of people from all across the globe.\r\n  Each person has their own views and opinions about the project. Try to listen\r\n  to each other and reach an agreement or compromise.\r\n* We have a [Code of\r\n  Conduct](https://github.com/fastify/fastify/blob/main/CODE_OF_CONDUCT.md). You\r\n  must adhere to it to participate in this project.\r\n* If you open a pull request, please ensure your contribution passes all\r\n  tests. If there are test failures, you will need to address them before we can\r\n  merge your contribution.\r\n\r\n## How To Contribute\r\n\r\nIf you'd like to contribute, start by searching through the\r\n[issues](https://github.com/fastify/fastify/issues) and [pull\r\nrequests](https://github.com/fastify/fastify/pulls) to see whether someone else\r\nhas raised a similar idea or question.\r\n\r\nIf you don't see your idea listed, and you think it fits into the goals of this\r\nguide, do one of the following:\r\n* **If your contribution is minor,** such as a typo fix, open a pull request.\r\n* **If your contribution is major,** such as a new feature, start by opening an\r\n  issue first. That way, other people can weigh in on the discussion before you\r\n  do any work.\r\n\r\n## Setting Up Your Environment\r\n\r\nPlease adhere to the project's code and documentation style. Some popular tools\r\nthat automatically \"correct\" code and documentation do not follow a style that\r\nconforms to this project's styles. Notably, this project uses\r\n[StandardJS](https://standardjs.com) for code formatting.\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/fastify/fastify)\r\n\r\n### Using Visual Studio Code\r\n\r\nWhat follows is how to use [Visual Studio Code (VSCode)\r\nportable](https://code.visualstudio.com/docs/editor/portable) to create a\r\nFastify specific environment. This guide is written as if you are setting up the\r\nenvironment on macOS, but the principles are the same across all platforms. See\r\nthe previously linked VSCode portable guide for help with other platforms.\r\n\r\nFirst, [download VSCode](https://code.visualstudio.com/download) and unpackage\r\nit to `/Applications/VSCodeFastify/`. Upon doing so, the following should output\r\n\"found\" when run in a terminal:\r\n\r\n```sh\r\n[ -d /Applications/VSCodeFastify/Visual\\ Studio\\ Code.app ] && echo \"found\"\r\n```\r\n\r\nAs mentioned in the VSCode portable guide, we need to unsandbox the application\r\nfor the portable mode to work correctly. So issue the following in a terminal:\r\n\r\n```sh\r\nxattr -dr com.apple.quarantine /Applications/VSCodeFastify/Visual\\ Studio\\ Code.app\r\n```\r\n\r\nNext, create the required data directories for VSCode:\r\n\r\n```sh\r\nmkdir -p /Applications/VSCodeFastify/code-portable-data/{user-data,extensions}\r\n```\r\n\r\nBefore continuing, we need to add the `code` command to your terminal's `PATH`.\r\nTo do so, we will [manually add VSCode to the\r\n`PATH`](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line).\r\nAs outlined in that document, the instructions vary depending on your default\r\nshell, so you should follow the instructions in that guide as relates to your\r\npreferred shell. However, we will tweak them slightly by defining an alias\r\ninstead of a direct reference to the `code` tool. This is so we do not conflict\r\nwith any other installation of VSCode you may have, and to keep this guide\r\nspecific to Fastify. So, ultimately, we want the following:\r\n\r\n```sh\r\nalias code-fastify=\"/Applications/VSCodeFastify/Visual\\ Studio\\ Code.app/Contents/Resources/app/bin/code\"\r\n```\r\n\r\nThe result should be that `code-fastify --version` results in something like:\r\n\r\n```sh\r\n\u276F code-fastify --version\r\n1.50.0\r\n93c2f0fbf16c5a4b10e4d5f89737d9c2c25488a3\r\nx64\r\n```\r\n\r\nNow that VSCode is installed, and we can work with it via the command line, we\r\nneed to install an extension that will aid in keeping any JavaScript you write\r\nfor the project formatted according to the project's style:\r\n\r\n```sh\r\ncode-fastify --install-extension dbaeumer.vscode-eslint\r\n```\r\n\r\nUpon successful execution of the previous command, the following command should\r\nresult in \"found\" being output:\r\n\r\n```sh\r\n[ -d /Applications/VSCodeFastify/code-portable-data/extensions/dbaeumer.vscode-eslint-* ] && echo \"found\"\r\n```\r\n\r\nNow, from within the directory of your local clone of the Fastify project, we\r\ncan open VSCode:\r\n\r\n```sh\r\ncode-fastify .\r\n```\r\n\r\nA new VSCode window should open and you should see the Fastify project files in\r\nthe left sidebar. But wait! We are not quite done yet. There are a few more\r\nbaseline settings that should be set before VSCode is ready.\r\n\r\nPress `cmd+shift+p` to bring up the VSCode command input prompt. Type `open\r\nsettings (json)`. Three [VSCode Setting](https://code.visualstudio.com/docs/getstarted/settings)\r\noptions will appear in the dropdown: Workspace, Default,\r\nand User settings. We recommend selecting Default. This will open a document\r\nthat is the settings for the editor. Paste the following JSON into this\r\ndocument, overwriting any text already present, and save it:\r\n\r\n```json\r\n{\r\n    \"[javascript]\": {\r\n        \"editor.defaultFormatter\": \"dbaeumer.vscode-eslint\",\r\n        \"editor.codeActionsOnSave\": {\r\n            \"source.fixAll\": true\r\n        }\r\n    },\r\n\r\n    \"workbench.colorCustomizations\": {\r\n        \"statusBar.background\": \"#178bb9\"\r\n    }\r\n}\r\n```\r\n\r\nFinally, from the menu bar, select \"Terminal > New Terminal\" to open a new terminal\r\nin the editor. Run `npm i` to install the Fastify dependencies.\r\n\r\nAt this point, you are all setup with a custom VSCode instance that can be used\r\nto work on Fastify contributions. As you edit and save JavaScript files, the\r\neditor will autocorrect any style issues.",
    "call_to_action_url": "https://github.com/fastify/fastify/issues"
  },
  {
    "project_id": "l0upfx98liaavvj3w6xkbt2c",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "React is one of Facebook\u2019s first open source projects that is both under very active development and is also being used to ship code to everybody on [facebook.com](https://facebook.com). We\u2019re still working out the kinks to make contributing to this project as easy and transparent as possible, but we\u2019re not quite there yet. Hopefully this document makes the process for contributing clear and answers some questions that you may have.\r\n\r\n## Code of Conduct\r\n\r\nFacebook has adopted the [Contributor Covenant](https://www.contributor-covenant.org) as its Code of Conduct, and we expect project participants to adhere to it. Please read [the full text](https://github.com/facebook/react/blob/main/CODE_OF_CONDUCT.md) so that you can understand what actions will and will not be tolerated.\r\n\r\n## Open Development\r\n\r\nReact follows [semantic versioning](https://semver.org/). We release patch versions for critical bugfixes, minor versions for new features or non-essential changes, and major versions for any breaking changes. When we make breaking changes, we also introduce deprecation warnings in a minor version so that our users learn about the upcoming changes and migrate their code in advance. Learn more about our commitment to stability and incremental migration in [our versioning policy](https://legacy.reactjs.org/docs/faq-versioning.html).\r\n\r\nEvery significant change is documented in the [changelog file](https://github.com/facebook/react/blob/main/CHANGELOG.md).\r\n\r\n## Branch Organization\r\n\r\nSubmit all changes directly to the [main branch](https://github.com/facebook/react/tree/main). We don\u2019t use separate branches for development or for upcoming releases. We do our best to keep `main` in good shape, with all tests passing.\r\n\r\nCode that lands in `main` must be compatible with the latest stable release. It may contain additional features, but no breaking changes. We should be able to release a new minor version from the tip of `main` at any time.\r\n\r\n## Feature Flags\r\n\r\nTo keep the `main` branch in a releasable state, breaking changes and experimental features must be gated behind a feature flag.\r\n\r\nFeature flags are defined in [packages/shared/ReactFeatureFlags.js](https://github.com/facebook/react/blob/main/packages/shared/ReactFeatureFlags.js). Some builds of React may enable different sets of feature flags; for example, the React Native build may be configured differently than React DOM. These flags are found in [packages/shared/forks](https://github.com/facebook/react/tree/main/packages/shared/forks). Feature flags are statically typed by Flow, so you can run `yarn flow` to confirm that you\u2019ve updated all the necessary files.\r\n\r\nReact\u2019s build system will strip out disabled feature branches before publishing. A continuous integration job runs on every commit to check for changes in bundle size. You can use the change in size as a signal that a feature was gated correctly.\r\n\r\n## Bugs\r\n\r\n### Where to Find Known Issues\r\n\r\nWe are using [GitHub Issues](https://github.com/facebook/react/issues) for our public bugs. We keep a close eye on this and try to make it clear when we have an internal fix in progress. Before filing a new task, try to make sure your problem doesn\u2019t already exist.\r\n\r\n### Reporting New Issues\r\n\r\nThe best way to get your bug fixed is to provide a reduced test case. This [JSFiddle template](https://jsfiddle.net/Luktwrdm/) is a great starting point.\r\n\r\n### Security Bugs\r\n\r\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe disclosure of security bugs. With that in mind, please do not file public issues; go through the process outlined on that page.\r\n\r\n## How to Get in Touch\r\n\r\n- IRC: [#reactjs on freenode](https://webchat.freenode.net/?channels=reactjs)\r\n- [Discussion forums](https://legacy.reactjs.org/community/support.html#popular-discussion-forums)\r\n\r\nThere is also [an active community of React users on the Discord chat platform](https://www.reactiflux.com/) in case you need help with React.\r\n\r\n## Proposing a Change\r\n\r\nIf you intend to change the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\r\n\r\nIf you\u2019re only fixing a bug, it\u2019s fine to submit a pull request right away but we still recommend to file an issue detailing what you\u2019re fixing. This is helpful in case we don\u2019t accept that specific fix but want to keep track of the issue.\r\n\r\n## Your First Pull Request\r\n\r\nWorking on your first Pull Request? You can learn how from this free video series:\r\n\r\n[How to Contribute to an Open Source Project on GitHub](https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github)\r\n\r\nTo help you get your feet wet and get you familiar with our contribution process, we have a list of [good first issues](https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22good+first+issue%22) that contain bugs that have a relatively limited scope. This is a great place to get started.\r\n\r\nIf you decide to fix an issue, please be sure to check the comment thread in case somebody is already working on a fix. If nobody is working on it at the moment, please leave a comment stating that you intend to work on it so other people don\u2019t accidentally duplicate your effort.\r\n\r\nIf somebody claims an issue but doesn\u2019t follow up for more than two weeks, it\u2019s fine to take it over but you should still leave a comment.",
    "call_to_action_url": "https://github.com/facebook/react/issues?q=is:open+is:issue+label:%22good+first+issue%22"
  },
  {
    "project_id": "sagzcuk4pxkpkj8ii0fxfvis",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "_tl;dr: join [Discord](./docs/contributing/Chat.md), be [courteous](CODE_OF_CONDUCT.md), follow the steps below to set up a development environment; if you stick around and contribute, you can [join the team](./docs/contributing/Contributor-access.md) and get commit access._\r\n\r\nWelcome\r\n-------\r\n\r\nWe invite you to join the Flutter team, which is made up of volunteers and sponsored folk alike!\r\nThere are many ways to contribute, including writing code, filing issues on GitHub, helping people\r\non our mailing lists, our chat channels, or on Stack Overflow, helping to triage, reproduce, or\r\nfix bugs that people have filed, adding to our documentation,\r\ndoing outreach about Flutter, or helping out in any other way.\r\n\r\nWe grant commit access (which includes full rights to the issue\r\ndatabase, such as being able to edit labels) to people who have gained\r\nour trust and demonstrated a commitment to Flutter. For more details\r\nsee the [Contributor access](./docs/contributing/Contributor-access.md)\r\npage in our docs.\r\n\r\nWe communicate primarily over GitHub and [Discord](./docs/contributing/Chat.md).\r\n\r\nBefore you get started, we encourage you to read these documents which describe some of our community norms:\r\n\r\n1. [Our code of conduct](CODE_OF_CONDUCT.md), which stipulates explicitly\r\n   that everyone must be gracious, respectful, and professional. This\r\n   also documents our conflict resolution policy and encourages people\r\n   to ask questions.\r\n\r\n2. [Values](./docs/about/Values.md),\r\n   which talks about what we care most about.\r\n\r\nHelping out in the issue database\r\n---------------------------------\r\n\r\nTriage is the process of going through bug reports and determining if they are valid, finding out\r\nhow to reproduce them, catching duplicate reports, and generally making our issues list\r\nuseful for our engineers.\r\n\r\nIf you want to help us triage, you are very welcome to do so!\r\n\r\n1. Join the #hackers-triage [Discord channel](./docs/contributing/Chat.md).\r\n\r\n2. Read [our code of conduct](CODE_OF_CONDUCT.md), which stipulates explicitly\r\n   that everyone must be gracious, respectful, and professional. If you're helping out\r\n   with triage, you are representing the Flutter team, and so you want to make sure to\r\n   make a good impression!\r\n\r\n3. Help out as described in our [triage guide](./docs/triage/README.md)\r\n   You won't be able to add labels at first, so instead start by trying to\r\n   do the other steps, e.g. trying to reproduce the problem and asking for people to\r\n   provide enough details that you can reproduce the problem, pointing out duplicates,\r\n   and so on. Chat on the #hackers-triage channel to let us know what you're up to!\r\n\r\n4. Familiarize yourself with our\r\n   [issue hygiene](./docs/contributing/issue_hygiene/README.md) wiki page,\r\n   which covers the meanings of some important GitHub labels and\r\n   milestones.\r\n\r\n5. Once you've been doing this for a while, someone will invite you to the flutter-hackers\r\n   team on GitHub and you'll be able to add labels too. See the\r\n   [contributor access](./docs/contributing/Contributor-access.md) wiki\r\n   page for details.\r\n\r\n\r\nQuality Assurance\r\n-----------------\r\n\r\nOne of the most useful tasks, closely related to triage, is finding and filing bug reports. Testing\r\nbeta releases, looking for regressions, creating test cases, adding to our test suites, and\r\nother work along these lines can really drive the quality of the product up. Creating tests\r\nthat increase our test coverage, writing tests for issues others have filed, all these tasks\r\nare really valuable contributions to open source projects.\r\n\r\nIf this interests you, you can jump in and submit bug reports without needing anyone's permission!\r\nThe #quality-assurance channel on our [Discord server](./docs/contributing/Chat.md)\r\nis a good place to talk about what you're doing. We're especially eager for QA testing when\r\nwe announce a beta release. See [quality assurance](./docs/releases/Quality-Assurance.md) for\r\nmore details.\r\n\r\nIf you want to contribute test cases, you can also submit PRs. See the next section\r\nfor how to set up your development environment, or ask in #hackers-test on Discord.\r\n\r\n> As a personal side note, this is exactly the kind of work that first got me into open\r\n> source. I was a Quality Assurance volunteer on the Mozilla project, writing test cases for\r\n> browsers, long before I wrote a line of code for any open source project. \u2014Hixie\r\n\r\n\r\nDeveloping for Flutter\r\n----------------------\r\n\r\nIf you prefer to write code, consider starting with the list of good\r\nfirst issues for [Flutter][flutter-gfi] or for [Flutter DevTools][devtools-gfi].\r\nReference the respective sections below for further instructions.\r\n\r\n[flutter-gfi]: https://github.com/flutter/flutter/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22\r\n[devtools-gfi]: https://github.com/flutter/devtools/labels/good%20first%20issue\r\n\r\n### Framework and Engine\r\n\r\nTo develop for Flutter, you will eventually need to become familiar\r\nwith our processes and conventions. This section lists the documents\r\nthat describe these methodologies. The following list is ordered: you\r\nare strongly recommended to go through these documents in the order\r\npresented.\r\n\r\n1. [Setting up your engine development environment](./engine/src/flutter/docs/contributing/Setting-up-the-Engine-development-environment.md),\r\n   which describes the steps you need to configure your computer to\r\n   work on Flutter's engine. If you only want to write code for the\r\n   Flutter framework, you can skip this step. Flutter's engine mainly\r\n   uses C++, Java, and Objective-C.\r\n\r\n2. [Setting up your framework development environment](./docs/contributing/Setting-up-the-Framework-development-environment.md),\r\n   which describes the steps you need to configure your computer to\r\n   work on Flutter's framework. Flutter's framework mainly uses Dart.\r\n\r\n3. [Tree hygiene](./docs/contributing/Tree-hygiene.md),\r\n   which covers how to land a PR, how to do code review, how to\r\n   handle breaking changes, how to handle regressions, and how to\r\n   handle post-commit test failures.\r\n\r\n4. [Our style guide](./docs/contributing/Style-guide-for-Flutter-repo.md),\r\n   which includes advice for designing APIs for Flutter, and how to\r\n   format code in the framework.\r\n\r\n5. [Flutter design doc template](https://flutter.dev/go/template),\r\n   which should be used when proposing a new technical design.  This is a good\r\n   practice to do before coding more intricate changes.\r\n   See also our [guidance for writing design docs](./docs/contributing/Design-Documents.md).\r\n\r\n[![How to contribute to Flutter](https://img.youtube.com/vi/4yBgOBAOx_A/0.jpg)](https://www.youtube.com/watch?v=4yBgOBAOx_A)\r\n\r\nIn addition to the documents, there is a video linked above on **How to contribute to Flutter**\r\nfrom the [Flutter](https://youtube.com/c/flutterdev) YouTube channel,\r\nthere are many pages in [our docs](./docs/README.md),\r\nand an article [Contributing to Flutter: Getting Started](https://medium.com/@ayushbherwani/contributing-to-flutter-getting-started-a0db68cbcd5b)\r\non Medium that may be of interest. For a curated list of pages see the sidebar\r\non the wiki's home page. They are more or less listed in order of importance.\r\n\r\n### DevTools\r\n\r\nContributing code to Dart & Flutter DevTools may be a good place to start if you are\r\nlooking to dip your toes into contributing with a relatively low-cost setup or if you\r\nare generally excited about improving the Dart & Flutter developer experience.\r\n\r\nPlease see the DevTools [CONTRIBUTING.md](https://github.com/flutter/devtools/blob/master/CONTRIBUTING.md)\r\nguide to get started.\r\n\r\n### Helping with existing PRs\r\n\r\nOnce you've learned the process of contributing, if you aren't sure what to work on next you\r\nmight be interested in helping other developers complete their contributions by picking up an\r\nincomplete patch from the list of [issues with partial patches][has-partial-patch].\r\n\r\n[has-partial-patch]: https://github.com/flutter/flutter/labels/has%20partial%20patch\r\n\r\nOutreach\r\n--------\r\n\r\nIf your interests lie in the direction of developer relations and developer outreach,\r\nwhether advocating for Flutter, answering questions in fora like\r\n[Stack Overflow](https://stackoverflow.com/questions/tagged/flutter?sort=Newest&filters=NoAnswers,NoAcceptedAnswer&edited=true)\r\nor [Reddit](https://www.reddit.com/r/flutterhelp/new/?f=flair_name%3A%22OPEN%22),\r\nor creating content for our [documentation](https://docs.flutter.dev/)\r\nor sites like [YouTube](https://www.youtube.com/results?search_query=flutter&sp=EgQIAxAB),\r\nthe best starting point is to join the #hackers-devrel [Discord channel](./docs/contributing/Chat.md).\r\nFrom there, you can describe what you're interested in doing, and go ahead and do it!\r\nAs others become familiar with your work, they may have feedback, be interested in\r\ncollaborating, or want to coordinate their efforts with yours.",
    "call_to_action_url": "https://github.com/flutter/flutter/contribute"
  },
  {
    "project_id": "tbimxjyrm7pp4uneskw9znju",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "Thank you for considering contributing to Flask!\r\n\r\n## Support questions\r\n\r\nPlease, don\u2019t use the issue tracker for this. Use one of the following resources for questions about your own code:\r\n\r\n- The IRC channel `#pocoo` on FreeNode.\r\n- The IRC channel `#python` on FreeNode for more general questions.\r\n- The mailing list [flask@python.org](mailto:flask@python.org) for long term discussion or larger issues.\r\n- Ask on Stack Overflow. Search with Google first using: `site:stackoverflow.com flask {search term, exception message, etc.}`\r\n\r\n## Reporting issues\r\n\r\n- Describe what you expected to happen.\r\n- If possible, include a minimal, complete, and verifiable example to help us identify the issue. This also helps check that the issue is not with your own code.\r\n- Describe what actually happened. Include the full traceback if there was an exception.\r\n- List your Python, Flask, and Werkzeug versions. If possible, check if this issue is already fixed in the repository.\r\n\r\n## Submitting patches\r\n\r\n- Include tests if your patch is supposed to solve a bug, and explain clearly under which circumstances the bug happens. Make sure the test fails without your patch.\r\n- Try to follow [PEP8](https://pep8.org/), but you may ignore the line length limit if following it would make the code uglier.",
    "call_to_action_url": null
  },
  {
    "project_id": "tlh25zgf4m2xq0yeg2bgm2ea",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "Welcome and thank you for wanting to contribute!\r\n\r\n## Get started\r\n\r\n- Have a question? Post it in [GitHub Discussions \u27A1\uFE0F](https://github.com/orgs/opentofu/discussions) or on the [OpenTofu Slack \u27A1\uFE0F](https://opentofu.org/slack/)!\r\n- Found a bug? [Report it here \u27A1\uFE0F](https://github.com/opentofu/opentofu/issues/new?assignees=&labels=bug%2Cpending-decision&projects=&template=bug_report.yml)\r\n- Have a feature idea? [Submit it here \u27A1\uFE0F](https://github.com/opentofu/opentofu/issues/new?assignees=&labels=enhancement%2Cpending-decision&projects=&template=feature_request.yml)\r\n- Want to help define a complex feature or bug fix? [Write an RFC here \u27A1\uFE0F](./rfc/README.md)\r\n- Want to provide a proof-of-concept for an issue? Please [submit a draft PR here \u27A1\uFE0F](https://github.com/opentofu/opentofu/compare)\r\n- Want to add a feature, fix a linter error, refactor something, or add CI tooling?\r\n  1. Check if there is an [open issue with the `accepted` label](https://github.com/opentofu/opentofu/issues?q=is%3Aopen+is%3Aissue+label%3Aaccepted),\r\n  2. Comment on the issue that you want to work on it,\r\n  3. Wait for a maintainer to assign it to you,\r\n  4. Then [submit your code here \u27A1\uFE0F](https://github.com/opentofu/opentofu/compare)\r\n- Want to fix a bug? [Submit a PR here \u27A1\uFE0F](https://github.com/opentofu/opentofu/compare)\r\n- Want to know what's going on? Read the [weekly updates \u27A1\uFE0F](WEEKLY_UPDATES.md), the [TSC summary \u27A1\uFE0F](TSC_SUMMARY.md) or join the [community meetings \u27A1\uFE0F](https://meet.google.com/xfm-cgms-has) on Wednesdays at 14:30 CET / 8:30 AM Eastern / 5:30 AM Western / 19:00 India time on this link: https://meet.google.com/xfm-cgms-has ([\uD83D\uDCC5 calendar link](https://calendar.google.com/calendar/event?eid=NDg0aWl2Y3U1aHFva3N0bGhyMHBhNzdpZmsgY18zZjJkZDNjMWZlMGVmNGU5M2VmM2ZjNDU2Y2EyZGQyMTlhMmU4ZmQ4NWY2YjQwNzUwYWYxNmMzZGYzNzBiZjkzQGc))\r\n\r\n---\r\n\r\n## Writing code for OpenTofu\r\n\r\nEager to get started on coding? Here's the short version:\r\n\r\n1. Set up a Go development environment with Git.\r\n2. Pay attention to copyright: [please read the DCO](https://developercertificate.org/), write the code yourself, avoid copy/paste. Disable your AI coding assistant.\r\n3. Run the tests with `go test` in the package you are working on.\r\n4. Build OpenTofu by running `go build ./cmd/tofu`.\r\n5. Update [the changelog](CHANGELOG.md).\r\n6. When you commit, use `git commit -s` to sign off your commits.\r\n7. Complete the checklist below before you submit your PR (or submit a draft PR).\r\n8. Your PR will be reviewed by the core team once it is marked as ready to review.\r\n\r\n---\r\n\r\n### Setting up your development environment\r\n\r\nYou can develop OpenTofu on any platform you like. However, we recommend either a Linux (including WSL on Windows) or a macOS build environment. You will need [Go](https://golang.org/) and [Git](https://git-scm.com/) installed, and we recommend an IDE to help you with code completion and code quality warnings. (We recommend installing the Go version documented in the [.go-version](.go-version) file.)\r\n\r\nAlternatively, if you use Visual Studio Code or Goland/IntelliJ and have Docker or Podman installed, you can also use a [devcontainer](.devcontainer.json). In Visual Studio Code, you can install the [Remote Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers), then reopen the project to get a prompt about activating the devcontainer. In Goland/Intellij, open the `.devcontainers.json` file and click the purple cube icon that appears next to the line numbers to activate the dev container. At this point you can proceed as if you were [building natively](#building-natively) on Linux.\r\n\r\n---\r\n\r\n### Signing off your commits\r\n\r\nWhen you contribute code to OpenTofu, we require you to add a [Developer Certificate of Origin](https://developercertificate.org/) sign-off. Please read the DCO carefully before you proceed and only contribute code you have written yourself. Please do not add code that you have not written from scratch yourself without discussing it in the related issue first.\r\n\r\nThe simplest way to add a sign-off is to use the `-s` command when you commit:\r\n\r\n```\r\ngit commit -s -m \"My commit message\"\r\n```\r\n\r\n---\r\n\r\n## FAQ\r\n\r\n### I've been assigned an issue, now what?\r\n\r\nFirst of all, thank you for volunteering! Before you begin coding, please take a minute to answer the following questions:\r\n\r\n1. **Is the issue clear enough? Do you know what the expected outcome is?** Sometimes, issues are not as clear as they should be. If the issue is unclear, please let us know in the `#dev-general` channel on the [OpenTofu Slack](https://opentofu.org/slack/) so a core team member can clarify it.\r\n2. **What's your timeline for implementing the issue?** Please communicate how much time you estimate you'll need. We ask for this to avoid issues staying assigned to an inactive community member and blocking other contributors. However, if you find out you'll need more time, please feel free to comment on the issue and we'll leave the issue assigned to you.\r\n3. **Do you have questions about parts of the OpenTofu codebase?** Please post in `#dev-general` on the [OpenTofu Slack](https://opentofu.org/slack/) for a quick answer. (Please avoid DMs as the person you are DM'ing may not be available or know the answer.)\r\n4. **Do you have experience writing tests?** All of our code-related PR's need adequate tests. Please [familiarize yourself with testing in Go](https://go.dev/doc/tutorial/add-a-test).\r\n5. **Have you read this document?** If not, please give it a quick skim, especially the sections about copyright and signoffs. \r\n\r\n---\r\n\r\n### My issue / PR / comment is not getting any responses!\r\n\r\nPlease accept our apologies, sometimes issues and comments fall through the cracks. Please post in `#dev-general` on the [OpenTofu Slack](https://opentofu.org/slack/) to alert the core team members to the lack of an answer.\r\n\r\n---\r\n\r\n### When I run `tofu version`, it contains a `-dev` suffix. How do I get rid of it?\r\n\r\nYou can get rid of this suffix by changing the `version.dev` ldflag:\r\n\r\n```\r\ngo build -ldflags \"-w -s -X 'github.com/opentofu/opentofu/version.dev=no'\" -o tofu ./cmd/tofu\r\n```\r\n\r\n---\r\n\r\n### How do I enable experimental features?\r\n\r\nYou can build `tofu` with the experimental features enabled using the `main.experimentsAllowed` ldflag set to `yes`:\r\n\r\n```\r\ngo build -ldflags \"-w -s -X 'main.experimentsAllowed=yes'\" -o tofu ./cmd/tofu\r\n```\r\n\r\n---\r\n\r\n### Can you implement X in the language?\r\n\r\nIt depends. The OpenTofu language is based on the [HCL language](https://github.com/hashicorp/hcl) and the [cty typing system](https://github.com/zclconf/go-cty). Since both are available under an open source license, and we prefer to keep compatibility as much as possible, we currently don't maintain a fork of these libraries. Language features may need to be partially or fully implemented in HCL or cty and if that is the case, we can't implement them in OpenTofu without changes to the respective libraries beforehand.\r\n\r\n---\r\n\r\n### I don't like HCL, can you replace it?\r\n\r\nHCL is baked into every corner of the OpenTofu codebase, so is here to stay. However, you can use the [JSON configuration syntax](https://opentofu.org/docs/language/syntax/json/) to write your code in JSON instead of HCL.\r\n\r\n---\r\n\r\n### Can you fix a bug in or add a feature to the Hashicorp providers, such as AWS, Azure, etc.?\r\n\r\nWe currently only maintain a read-only mirror of these providers for the purposes of building binaries for the OpenTofu registry which would otherwise not be available. They are not true downstream versions that we can add patches to and OpenTofu users expect them to work the same as the upstream versions. In short: no, we cannot fix bugs or add features to these providers.\r\n\r\n---\r\n\r\n### Can you fork project X?\r\n\r\nCurrently, we are at capacity for development and do not have additional capacity to take on additional projects unless necessary for the continued work on OpenTofu. While the final determination lies with the [Technical Steering Committee](#who-is-the-technical-steering-committee), the answer is likely no in almost all cases.\r\n\r\n---\r\n\r\n### Who is the core team?\r\n\r\nCore team members are full time developers sponsored by the participating companies. You can find the list of core developers in the [MAINTAINERS](MAINTAINERS) file. Their role is to triage issues, work on feature development, help plan, review, and document community contributions, support the community, and refer feature requests to the Technical Steering Committee.\r\n\r\n---\r\n\r\n### Can I become a core team member?\r\n\r\nPossibly. Please look for open positions with the sponsoring companies as they hire core team members. The interview process is the same regardless of which sponsoring company you apply to. To become a core team member, you must be equally good at Go and at communication since much of our work is helping the community. Good luck!\r\n\r\n---\r\n\r\n### Who is the Technical Steering Committee?\r\n\r\nThe Technical Steering Committee consists of one delegate from each company sponsoring the OpenTofu core team. You can find their names in the [TSC_SUMMARY.md](TSC_SUMMARY.md) file. Their role is to decide on larger commitments of core developer time, as well as long-term strategic issues.",
    "call_to_action_url": "https://github.com/opentofu/opentofu/contribute"
  },
  {
    "project_id": "ld7gwsin1vtaieremur7706i",
    "created_at": 1727757842,
    "updated_at": 1727757842,
    "orientation_content": "We appreciate your interest in considering contributing to valkey-py.\r\nCommunity contributions mean a lot to us.\r\n\r\n## Contributions we need\r\n\r\nYou may already know how you'd like to contribute, whether it's a fix for a bug you\r\nencountered, or a new feature your team wants to use.\r\n\r\nIf you don't know where to start, consider improving\r\ndocumentation, bug triaging, and writing tutorials are all examples of\r\nhelpful contributions that mean less work for you.\r\n\r\n## Developer Certificate of Origin\r\n\r\nWe respect the intellectual property rights of others and we want to make sure\r\nall incoming contributions are correctly attributed and licensed. A Developer\r\nCertificate of Origin (DCO) is a lightweight mechanism to do that. The DCO is\r\na declaration attached to every commit. In the commit message of the contribution,\r\nthe developer simply adds a `Signed-off-by` statement and thereby agrees to the DCO,\r\nwhich you can find below or at [DeveloperCertificate.org](http://developercertificate.org/).\r\n\r\n```text\r\nDeveloper's Certificate of Origin 1.1\r\n\r\nBy making a contribution to this project, I certify that:\r\n\r\n(a) The contribution was created in whole or in part by me and I\r\n    have the right to submit it under the open source license\r\n    indicated in the file; or\r\n\r\n(b) The contribution is based upon previous work that, to the\r\n    best of my knowledge, is covered under an appropriate open\r\n    source license and I have the right under that license to\r\n    submit that work with modifications, whether created in whole\r\n    or in part by me, under the same open source license (unless\r\n    I am permitted to submit under a different license), as\r\n    Indicated in the file; or\r\n\r\n(c) The contribution was provided directly to me by some other\r\n    person who certified (a), (b) or (c) and I have not modified\r\n    it.\r\n\r\n(d) I understand and agree that this project and the contribution\r\n    are public and that a record of the contribution (including\r\n    all personal information I submit with it, including my\r\n    sign-off) is maintained indefinitely and may be redistributed\r\n    consistent with this project or the open source license(s)\r\n    involved.\r\n```\r\n\r\nWe require that every contribution to Valkey to be signed with a DCO. We require the\r\nusage of known identity (such as a real or preferred name). We do not accept anonymous\r\ncontributors nor those utilizing pseudonyms. A DCO signed commit will contain a line like:\r\n\r\n\r\n```text\r\nSigned-off-by: Jane Smith <jane.smith@email.com>\r\n```\r\n\r\nYou may type this line on your own when writing your commit messages. However, if your\r\nuser.name and user.email are set in your git configs, you can use `git commit` with `-s`\r\nor `--signoff` to add the `Signed-off-by` line to the end of the commit message. We also\r\nrequire revert commits to include a DCO.\r\n\r\nIf you're contributing code to the Valkey project in any other form, including\r\nsending a code fragment or patch via private email or public discussion groups,\r\nyou need to ensure that the contribution is in accordance with the DCO.\r\n\r\n## Your First Contribution\r\n\r\nUnsure where to begin contributing? You can start by looking through\r\n[help-wanted\r\nissues](https://github.com/valkey-io/valkey-py/issues?q=is%3Aopen+is%3Aissue+label%3ahelp-wanted).\r\n\r\nNever contributed to open source before? Here are a couple of friendly\r\ntutorials:\r\n\r\n-   <http://makeapullrequest.com/>\r\n-   <http://www.firsttimersonly.com/>\r\n\r\n## Getting Started\r\n\r\nHere's how to get started with your code contribution:\r\n\r\n1.  Create your own fork of valkey-py\r\n2.  Do the changes in your fork\r\n3.\r\n    *Create a virtualenv and install the development dependencies from the dev_requirements.txt file:*\r\n\r\n        a.  python -m venv .venv\r\n        b.  source .venv/bin/activate\r\n        c.  pip install -r dev_requirements.txt\r\n        c.  pip install -r requirements.txt\r\n\r\n4.  If you need a development environment, run `invoke devenv`. Note: this relies on docker compose to build environments, and assumes that you have a version supporting [docker profiles](https://docs.docker.com/compose/profiles/).\r\n5.  While developing, make sure the tests pass by running `invoke tests`\r\n6.  If you like the change and think the project could use it, send a\r\n    pull request\r\n\r\nTo see what else is part of the automation, run `invoke -l`\r\n\r\n## The Development Environment\r\n\r\nRunning `invoke devenv` installs the development dependencies specified\r\nin the dev_requirements.txt. It starts all of the dockers used by this\r\nproject, and leaves them running. These can be easily cleaned up with\r\n`invoke clean`. NOTE: it is assumed that the user running these tests,\r\ncan execute docker and its various commands.\r\n\r\n-   A master Valkey node\r\n-   A Valkey replica node\r\n-   Three sentinel Valkey nodes\r\n-   A valkey cluster\r\n-   An stunnel docker, fronting the master Valkey node\r\n\r\nThe replica node, is a replica of the master node, using the\r\n[leader-follower replication](https://redis.io/topics/replication)\r\nfeature.\r\n\r\nThe sentinels monitor the master node in a [sentinel high-availability\r\nconfiguration](https://redis.io/topics/sentinel).\r\n\r\n## Testing\r\n\r\nCall `invoke tests` to run all tests, or `invoke all-tests` to run linters\r\ntests as well. With the 'tests' and 'all-tests' targets, all Valkey and\r\nValkeyCluster tests will be run.\r\n\r\nIt is possible to run only Valkey client tests (with cluster mode disabled) by\r\nusing `invoke standalone-tests`; similarly, ValkeyCluster tests can be run by using\r\n`invoke cluster-tests`.\r\n\r\nEach run of tests starts and stops the various dockers required. Sometimes\r\nthings get stuck, an `invoke clean` can help.\r\n\r\n## Documentation\r\n\r\nIf relevant, update the code documentation, via docstrings, or in `/docs`.\r\n\r\nYou can check how the documentation looks locally by running `invoke build-docs`\r\nand loading the generated HTML files in a browser.\r\n\r\nHistorically there is a mix of styles in the docstrings, but the preferred way\r\nof documenting code is by applying the\r\n[Google style](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html).\r\nType hints should be added according to PEP484, and should not be repeated in\r\nthe docstrings.\r\n\r\n### Docker Tips\r\n\r\nFollowing are a few tips that can help you work with the Docker-based\r\ndevelopment environment.\r\n\r\nTo get a bash shell inside of a container:\r\n\r\n`$ docker run -it <service> /bin/bash`\r\n\r\nContainers run a minimal Debian image that probably lacks tools you want\r\nto use. To install packages, first get a bash session (see previous tip)\r\nand then run:\r\n\r\n`$ apt update && apt install <package>`\r\n\r\nYou can see the logging output of a containers like this:\r\n\r\n`$ docker logs -f <service>`\r\n\r\n### Troubleshooting\r\n\r\nIf you get any errors when running `make dev` or `make test`, make sure\r\nthat you are using supported versions of Docker.\r\n\r\nPlease try at least versions of Docker.\r\n\r\n-   Docker 19.03.12\r\n\r\n## How to Report a Bug\r\n\r\n\r\n### Security Vulnerabilities\r\n\r\nReporting a vulnerability? See [SECURITY.md](https://github.com/valkey-io/valkey-py/blob/main/SECURITY.md).\r\n\r\n### Everything Else\r\n\r\nWhen filing an issue, make sure to answer these five questions:\r\n\r\n1.  What version of valkey-py are you using?\r\n2.  What version of valkey are you using?\r\n3.  What did you do?\r\n4.  What did you expect to see?\r\n5.  What did you see instead?\r\n\r\n## Suggest a feature or enhancement\r\n\r\nIf you'd like to contribute a new feature, make sure you check our\r\nissue list to see if someone has already proposed it. Work may already\r\nbe underway on the feature you want or we may have rejected a\r\nfeature like it already.\r\n\r\nIf you don't see anything, open a new issue that describes the feature\r\nyou would like and how it should work.\r\n\r\n## Code review process\r\n\r\nThe core team regularly looks at pull requests. We will provide\r\nfeedback as soon as possible. After receiving our feedback, please respond\r\nwithin two weeks. After that time, we may close your PR if it isn't\r\nshowing any activity.",
    "call_to_action_url": "https://github.com/valkey-io/valkey-py/issues?q=is%3Aopen%20is%3Aissue"
  }
]
